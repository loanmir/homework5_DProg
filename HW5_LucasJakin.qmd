---
title: "Data Programming"
subtitle: "Homework 5"
author: "Lucas Lorenzo Jakin"
date: "`r format(Sys.time(), '%e %B %Y')`"
format: 
  pdf:
    embed-resources: true
execute: 
  warning: false
  messages: false
  echo: true
  error: true
---

## Solutions

Submit a **.html** file created using Quarto via e-classroom. A sample is attached. Display all code (packages,input) and output.

Import the database from **https://www.kaggle.com/datasets/konradb/fatal-encounters-database**

It contains the 2 dataframes shown below.

```{r}
library(readr)
library(tidyverse)
library(ggplot2)

dataset <- read.csv("dataset.csv", sep = ";")
state_abrv_pop <- read.csv("state_abbreviations_and_populations.csv", sep = ";")

```

### 1
Show the number of fatalities per state (full name of state required). Furthermore, plot the results with a histogram.


```{r}
# Solve 1 here

#a) show number of fatalities per state:
data_merged <- inner_join(state_abrv_pop, dataset, by = c("Abbreviation" = "State"))

fatalities_state <- data_merged %>% group_by(State = .$Name.x) %>%
  summarise(n = n())
fatalities_state
#b)
ggplot(fatalities_state, aes(x = n, y = State)) +
  geom_histogram(stat = "identity") +
  labs(title = "Fatalities per State",
       x = "count",
       y = "State")

```

### 2
Plot death by gender across race with a histogram, entirely with R, not with markdown/quarto!

```{r}
# Solve 2 here 
gender_raceData <- dataset %>% group_by(Gender, Race) %>% summarise(n = n(), .groups = 'drop')
ggplot(gender_raceData, aes(x = n, y = Race))+
  geom_col() +
  facet_wrap(~Gender, scales = "free_x")+
  labs(x = "count", y = "Race") 

```

### 3
Plot the outline of the USA by scatterplotting the locations of deaths.

```{r}
#Solve 3 here
dataset <- dataset %>% mutate(LongitudeNew = as.numeric(Longitude),
                              LatitudeNew = as.numeric(Latitude))
dataset_clean <- dataset %>% filter(!is.na(LongitudeNew) & !is.na(LatitudeNew))
ggplot(dataset_clean, aes(x = LongitudeNew, y = LatitudeNew)) +
  geom_point(color = "black")+
  labs(x = "Longitude",
       y = "Latitude")
```


```{r}
#| echo: false
#installs tidyverse and quarto if not done already, delete this chunk after running it once.
normalpackages<-c("tidyverse","quarto")
   new.packages <- normalpackages[!(normalpackages %in% installed.packages()[,"Package"])]
  if(length(new.packages)>0) {install.packages(new.packages,dependencies =T,quiet = T)}
```

